image: alpine:latest

stages:
  - test
  - build
  - deploy

before_script:
  - export GOPATH=/cache/go


## BACKEND

test-backend:
  stage: test
  image: golang:latest
  allow_failure: true
  script:
    - cd backend
    - go test -cover $(go list ./... | grep -v /vendor/)

lint-backend:
  stage: test
  image: golang:latest
  allow_failure: true
  script:
    - cd backend
    - go get -u golang.org/x/lint/golint
    - /cache/go/bin/golint -set_exit_status $(go list ./... | grep -v /vendor/)

build-backend:
  stage: build
  image: golang:latest
  script:
    - cd backend
    - go build -ldflags="-s -w" wtfd.go
  artifacts:
    paths:
      - backend/wtfd

## FRONTEND

build-frontend:
  stage: build
  image: node:latest
  script:
    - cd frontend
    - make clean
    - make
  cache:
    paths:
      - frontend/build
      - frontend/node_modules

pages:
  stage: deploy
  script:
    - cp -vr frontend/build/. public
  cache:
    paths:
      - frontend/build

